#!/usr/bin/env bash

source ./lib/common.bash
check_s3cmd
set -o nounset

tempfoo=$(basename $0)
# tempfoo is del-s3

errfile=$(mktemp -t "$tempfoo")
exec 3> $errfile

myfifodir=$(mktemp -d -t ${tempfoo})

function on_exit
{
  exec 3>&-
  exec 4>&-
  exec 5>&-

  rm -rf "$myfifodir"
  if [[ -s $errfile ]]
  then
    mv -f $errfile del-s3.err
  else
    rm -f $errfile
  fi
}
trap on_exit EXIT

data_dir='./load-s3-data'
if [[ ! -d $data_dir ]]
then
  perr "Expected to find data dir $data_dir"
fi

myfifo="$myfifodir/$tempfoo.fifo"
mkfifo -m 0700 "$myfifo"
exec 4<> "$myfifo" # hook pipe up to descriptor 4 for read/write

declare -i del_count=0
declare -i maximum=4 # max subprocesses at a time
declare -i running=0 # current running count
declare -i cpid=0

load_fifo='load-s3.fifo'
if [[ -p "$load_fifo" ]]
then
  exec 5< "$load_fifo" # hook pipe up to descriptor 5 for read
  while read -u 5 s3_file
  do
    while (( running >= maximum ))
    do
      if read -u 4 cpid
      then
        (( ++del_count ))
        wait $cpid
        (( --running ))
      fi
    done

    (
      s3cmd_output="$(mktemp -t "$tempfoo")"
      ./s3cmd/s3cmd -c .s3cfg del "$s3_file" > "$s3cmd_output" 2>&1
      if [[ $? != 0 ]]
      then
        cat >&3 <<EOT
------------------------------------------------------------------------ 
ERROR $? in s3cmd -c .s3cfg del "$s3_file"
EOT
      cat < "$s3cmd_output" >&3
      cat >&3 <<EOT
------------------------------------------------------------------------ 
EOT
      fi
      rm -f "$s3cmd_output"
      # TODO: sleep?
      sleep 2
      echo $BASHPID 1>&4
    ) &

    (( ++running ))

  done
else
  errexit "expected to find fifo $load_fifo"
fi

pinfo 'waiting for all subprocesses...'
while (( running > 0 ))
do
  declare -i cpid=0
  if read -u 4 cpid
  then
    wait $cpid
    (( --running ))
  fi
done

exit 0

