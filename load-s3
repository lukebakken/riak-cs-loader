#!/usr/bin/env bash

set -o errexit
set -o errtrace

function now
{
  date '+%Y-%m-%d %H:%M:%S'
}

function pwarn
{
  echo "$(now) [warning]: $@" 1>&2
}

function perr
{
  echo "$(now) [error]: $@" 1>&2
}

function pinfo
{
  echo "$(now) [info]: $@"
}

function errexit
{
  perr "$@"
  exit 1
}

if [[ -d ./s3cmd-env ]]
then
  source ./s3cmd-env/bin/activate
else
  errexit 'Please use virtualenv to create a python env named "s3cmd-env" with python-dateutil and python-magic libs installed.'
fi

set -o nounset

# pip install python-dateutil
# pip install python-magic

errfile=$(mktemp -t $0)
exec 3> $errfile

# cat >&3 <<EOT
# ------------------------------------------------------------------------ 
# TEST ERROR
# EOT
# cat >&3 <<EOT
# END TEXT
# ------------------------------------------------------------------------ 
# EOT
# mv -v $errfile test-s3.errout
# exit 0

tempfoo=$(basename $0)
myfifodir=$(mktemp -d -t ${tempfoo}) || exit 1

function on_exit
{
  exec 3>&-
  exec 4>&-

  rm -rf $myfifodir
  if [[ -s $errfile ]]
  then
    mv -f $errfile test-s3.errout
  else
    rm -f $errfile
  fi
}
trap on_exit EXIT

myfifo="$myfifodir/$tempfoo.fifo"
mkfifo -m 0700 "$myfifo"
exec 4<> "$myfifo" # hook pipe up to descriptor 4 for read/write

declare -i maximum=8
declare -i running=0
declare -i cpid=0

declare -i file_count=0
while (( file_count < 128 ))
do
  while (( running >= maximum ))
  do
    if read -u 4 cpid
    then
      wait $cpid
      (( --running ))
    fi
  done
  (
    declare -i size=$(( RANDOM * 256 ))
    tmpfile=$(mktemp -t $0)
    outfile=$(mktemp -t $0)
    dd if=/dev/urandom bs=$size file_count=1 2>/dev/null | openssl enc -a > $tmpfile
    ./s3cmd/s3cmd -c .s3cfg put $tmpfile s3://test-bucket/file-${file_count}.txt > $outfile 2>&1
    if [[ $? != 0 ]]
    then
      echo "s3cmd returned $?" 1>&2
      cat >&3 <<EOT
------------------------------------------------------------------------ 
ERROR $? in s3cmd -c .s3cfg put $tmpfile s3://test-bucket/file-${file_count}.txt 
EOT
      cat < $outfile >&3
      cat >&3 <<EOT
------------------------------------------------------------------------ 
EOT
    fi
    rm -f $tmpfile $outfile
    # sleep $(( RANDOM % 3 + 1 ))
    echo $BASHPID 1>&4
  ) &
  (( ++running ))
  (( ++file_count ))
done

wait

exit 0
